import java.lang.Math.*;
import java.util.ArrayList;
public class Neuron {
    private float value;
    private float sum;
    private ArrayList<Neuron> inputs;
    private float error;
    private float weight;
    private float threshhold;
    private boolean fired;
    
    public Neuron(float t, float v) {
        sum = 0.0f;
        value = v;
        threshold = t;
        fire = false;
        inputs = new ArrayList();
    }
    
    public float getValue() {
        return value;
    }
    
    public void connect (Neuron ... ns) {
        for (Neuron n : ns) inputs.add(n);
    }

    public void setWeight (float newWeight) {
        weight = newWeight;
    }

    public void setWeight (boolean newWeight) {
        weight = newWeight ? Math.random() : 0.0f;
    }

    public float getWeight () {
        return weight;
    }
    
    public float activate(){
        for (Neuron n : inputs) {
            n.activate();
            sum += n.getValue() * n.getWeight();
            if (sum > threshold) {
                return 1;
            }
            else return -1
        }
    
    public float fire() {
        for (Neuron n :inputs) {
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /*



    public float fire () {
        if (inputs.size() > 0) {
            float totalWeight = 0.0f;
            for (Neuron n : inputs) {
                n.fire();
                totalWeight += (n.isFired()) ? n.getWeight() : 0.0f;
            }
            fired = totalWeight > threshhold;
            return totalWeight;
        }
        else if (weight != 0.0f) {
            fired = weight > threshhold;
            return weight;
        }
        else {
            return 0.0f;
        }
    }

    public boolean isFired () {
        return fired;
    }
    */
}
